@model IEnumerable<Model.Employee>

@{
    ViewBag.Title = "SearchEmployee";
}

<div class="display-4 text-center">Employee Lookup</div>
<hr />
@using (Html.BeginForm("SearchEmployee", "Employee", FormMethod.Get))
{
    <p class="text-center">
        <b>Search By:</b> @Html.RadioButton("searchBy", "Name", true) Name
        @Html.RadioButton("searchBy", "EmployeeID") Employee ID <br />
        @Html.TextBox("search", null, new { @placeholder = "Enter Search Criteria" }) <input type="submit" value="Search" />
    </p>
}
@if (Model.Count() != 0 && Model.Where(n => n.SingleError == "Blank").Count() == 0 &&
    Model.Where(n => n.SingleError == "None").Count() == 0 && Model.Where(n => n.SingleError == "Format").Count() == 0)
{
    <div class="container-fluid">
        <table class="table table-bordered table-striped table table-responsive">
            <thead class="thead-dark text-center" style="overflow: hidden; white-space: nowrap;">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StreetAddress)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProvState)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PostalZip)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.WorkPhoneNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CellPhoneNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    @foreach (var item in Model)
                    {
                        if (item.Id == Convert.ToInt32(Session["EmployeeId"]))
                        {
                            <th>
                                
                            </th>
                        }
                    }
                </tr>
            </thead>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StreetAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProvState)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PostalZip)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkPhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CellPhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    @if (item.Id == Convert.ToInt32(Session["EmployeeId"]))
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                        </td>
                    }

                </tr>
            }

        </table>
    </div>
}
@if (Model.Count() != 0 && Model.Where(n => n.SingleError == "Blank").Count() > 0)
{
    <p class="text-center text-danger">Field cannot be left blank</p>
}
@if (Model.Count() != 0 && Model.Where(n => n.SingleError == "None").Count() > 0)
{
    <p class="text-center text-danger">No Employees meet the provided search parameters</p>
}
@if (Model.Count() != 0 && Model.Where(n => n.SingleError == "Format").Count() > 0)
{
    <p class="text-center text-danger">Employee ID must be exactly 8 digits long</p>
}

