@model Web.AdminSupportSystem.Models.ItemVM

@{
    ViewBag.Title = "Edit";
}

<div class="display-4 text-center">Modify Purchase Order Details</div>
</hr>
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.Item.Id)
            @Html.HiddenFor(model => model.Item.POId)
            @Html.HiddenFor(model => model.Item.Name)
            @Html.HiddenFor(model => model.Item.Quantity)
            @Html.HiddenFor(model => model.Item.Location)
            @Html.HiddenFor(model => model.Item.Justification)
            @Html.HiddenFor(model => model.Item.ItemTotal)
            @Html.HiddenFor(model => model.Item.ItemStatus)
            @Html.HiddenFor(model => model.Item.UnitPrice)
            <div class="form-row">
                <div class="form-group col-5 mx-auto">
                    <div>
                        @Html.LabelFor(model => model.Item.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Item.Name, new { htmlAttributes = new { @class = "form-control", @style = "max-width: 100%" } })
                        @Html.ValidationMessageFor(model => model.Item.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-3 mx-auto">
                    <div>
                        @Html.LabelFor(model => model.Item.Quantity, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Item.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-2 mx-auto">

                    <div>
                        @Html.LabelFor(model => model.Item.Location, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Item.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-2 mx-auto">

                    <div>
                        @Html.LabelFor(model => model.Item.Justification, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Item.Justification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item.Justification, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-3 mx-auto">

                    <div>
                        @Html.LabelFor(model => model.Item.UnitPrice, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Item.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <hr />
            <div class="form-group text-center">
                <div>
                    <input type="submit" value="Save" class="btn btn-default" style="border:solid; border-color:darkgray; border-width:thin" />
                </div>
            </div>
        </div>
    }
}
else
{
    <p class="text-center text-success">Item has been modified successfully!</p>
}
<div class="text-center">
    @Html.ActionLink("Go Back to Items", "Index")
</div>
